@model DatingHemsida_Grupp_9.ViewModels.WallViewModel

@{
    ViewData["Title"] = "Index";
}

<h1>Wall</h1>
<div>
    @if ((bool)ViewBag.AddFriend == true)
    {
        @using (Html.BeginForm("AddFriend", "Friend", new { reciverId = Model.Profile.Id }))
        {

            @*<input type="hidden" name="profileId" value="" />*@
            <input type="submit" name="GoToPage" value="Add friend!" />
        }}
    <input id="id" type="hidden" name="id" value="@Model.Profile.Id" />
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Profile.Firstname)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Profile.Firstname)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Profile.Lastname)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Profile.Lastname)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Profile.Age)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Profile.Age)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Profile.Gender)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Profile.Gender)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Profile.SexualOrientation)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Profile.SexualOrientation)
        </dd>
        @*<dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.Profile.ImagePath)
            </dt>*@
        <dd class="col-sm-10">
            <img src="@("~/Image/" + Model.Profile.ImagePath)" asp-append-version="true" width="250" height="250" />
    </dl>
</div>

<div id="testDiv">
    @await Html.PartialAsync("_Messeges", Model.WallMessages)
</div>
<div>

    <form>
        <p>
            <textarea id="messageBody" rows="4" cols="50" placeholder="Write a message!"></textarea>
        <p>
            <button id="sendButton" type="button">Post!</button>
        </p>
    </form>
</div>

@section Scripts {
    <script>

        $(() =>

            $("#sendButton").click((e) => {
                e.preventDefault();

                var message = {};
                message.text = $('#messageBody').val();
                message.reciverId = $('#id').val();

                if (message.text.length >= 1 && message.text.length <= 255) {
                    test();
                    //postMessage().then(updatePartial());

                    async function test() {

                        try {

                            await postMessage();
                            setTimeout(updatePartial, 600);
                            //alert("Message sent!");
                             

                            // //$.when(await postMessage()).then(updatePartial());

                            //updatePartial();

                        } catch (err) { }
                    };

                } else {
                    alert("Please enter a valid message");
                }

            })

        );

        function postMessage() {
            var message = {};
            message.text = $('#messageBody').val();
            $('#messageBody').val("");


            message.reciverId = $('#id').val();
            $.ajax({
                type: "POST",
                url: "/api/MessageAPI/postMessage",
                data: JSON.stringify(message),
                contentType: "application/json",
                dataType: "json"
                

            });
            
        };

        //function postMessage() {

        //    var message = {};
        //    message.text = $('#messageBody').val();
        //    $('#messageBody').val("");

        //    message.reciverId = $('#id').val();
        //    $.ajax({
        //        type: "POST",
        //        url: "/api/MessageAPI/postMessage",
        //        data: JSON.stringify(message),
        //        contentType: "application/json",
        //        dataType: "json"

        //    });

        //};

        //function postMessage(callback) {
        //    return new Promise(function (resolve, reject) {
        //        setTimeout(function () {
        //            var message = {};
        //            message.text = $('#messageBody').val();
        //            $('#messageBody').val("");

        //            message.reciverId = $('#id').val();
        //            $.ajax({
        //                type: "POST",
        //                url: "/api/MessageAPI/postMessage",
        //                data: JSON.stringify(message),
        //                contentType: "application/json",
        //                dataType: "json"

        //            });
        //            resolve();
        //        }, 10000);
        //    })

        //};
        function updatePartial() {
            var message = {};
            message.reciverId = $('#id').val();

            $.ajax({
                url: "Wall/DisplayMessage",
                type: "GET",
                data: message

            }).done(function (partialViewResult) {
                $("#testDiv").html(partialViewResult);

            });
            window.scrollTo(0, document.body.scrollHeight);
        };
    </script>

}